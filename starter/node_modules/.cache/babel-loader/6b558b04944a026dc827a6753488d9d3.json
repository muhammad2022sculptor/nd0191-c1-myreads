{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahi\\\\Desktop\\\\React Learning\\\\MyRead App Project 1\\\\nd0191-c1-myreads\\\\starter\\\\src\\\\SearchPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Book from \"./Book\";\nimport * as BookApi from \"./BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchPage({\n  books,\n  setSelectedShelf\n}) {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  useEffect(() => {\n    async function searchQuery() {\n      try {\n        if (search !== \"\") {\n          let data = await BookApi.search(search, 30);\n\n          if (data) {\n            setSearchedBooks(data);\n          }\n        } else {\n          setSearchedBooks([]);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    searchQuery();\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"close-search\",\n        to: \"/\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: search,\n          onChange: e => {\n            setSearch(e.target.value.trim());\n          },\n          type: \"text\",\n          placeholder: \"Search by title, author, or ISBN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"books-grid\",\n        children: searchedBooks.length > 0 && searchedBooks.map(book => /*#__PURE__*/_jsxDEV(Book, {\n          book: book,\n          setSelectedShelf: setSelectedShelf\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchPage, \"kewRY0W0CFsjALMTktUwnGKo/WU=\");\n\n_c = SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["C:/Users/shahi/Desktop/React Learning/MyRead App Project 1/nd0191-c1-myreads/starter/src/SearchPage.js"],"names":["React","useState","useEffect","Link","Book","BookApi","SearchPage","books","setSelectedShelf","search","setSearch","searchedBooks","setSearchedBooks","searchQuery","data","e","console","log","target","value","trim","length","map","book","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAApB,EAAiD;AAAA;;AAC9D,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeW,WAAf,GAA6B;AAC3B,UAAI;AACF,YAAIJ,MAAM,KAAK,EAAf,EAAmB;AACjB,cAAIK,IAAI,GAAG,MAAMT,OAAO,CAACI,MAAR,CAAeA,MAAf,EAAuB,EAAvB,CAAjB;;AACA,cAAIK,IAAJ,EAAU;AACRF,YAAAA,gBAAgB,CAACE,IAAD,CAAhB;AACD;AACF,SALD,MAKO;AACLF,UAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD;AACF,OATD,CASE,OAAOG,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF;;AACDF,IAAAA,WAAW;AACZ,GAhBQ,EAgBN,CAACJ,MAAD,CAhBM,CAAT;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,cAAhB;AAA+B,QAAA,EAAE,EAAC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACE;AACE,UAAA,KAAK,EAAEA,MADT;AAEE,UAAA,QAAQ,EAAGM,CAAD,IAAO;AACfL,YAAAA,SAAS,CAACK,CAAC,CAACG,MAAF,CAASC,KAAT,CAAeC,IAAf,EAAD,CAAT;AACD,WAJH;AAKE,UAAA,IAAI,EAAC,MALP;AAME,UAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBACGT,aAAa,CAACU,MAAd,GAAuB,CAAvB,IACCV,aAAa,CAACW,GAAd,CAAmBC,IAAD,iBAChB,QAAC,IAAD;AAEE,UAAA,IAAI,EAAEA,IAFR;AAGE,UAAA,gBAAgB,EAAEf;AAHpB,WACOe,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA,gBADF;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GArDuBlB,U;;KAAAA,U","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Book from \"./Book\";\r\nimport * as BookApi from \"./BooksAPI\";\r\n\r\nexport default function SearchPage({ books, setSelectedShelf }) {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchedBooks, setSearchedBooks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function searchQuery() {\r\n      try {\r\n        if (search !== \"\") {\r\n          let data = await BookApi.search(search, 30);\r\n          if (data) {\r\n            setSearchedBooks(data);\r\n          }\r\n        } else {\r\n          setSearchedBooks([]);\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n    searchQuery();\r\n  }, [search]);\r\n\r\n  return (\r\n    <div className=\"search-books\">\r\n      <div className=\"search-books-bar\">\r\n        <Link className=\"close-search\" to=\"/\">\r\n          Close\r\n        </Link>\r\n        <div className=\"search-books-input-wrapper\">\r\n          <input\r\n            value={search}\r\n            onChange={(e) => {\r\n              setSearch(e.target.value.trim());\r\n            }}\r\n            type=\"text\"\r\n            placeholder=\"Search by title, author, or ISBN\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"search-books-results\">\r\n        <ol className=\"books-grid\">\r\n          {searchedBooks.length > 0 &&\r\n            searchedBooks.map((book) => (\r\n              <Book\r\n                key={book.id}\r\n                book={book}\r\n                setSelectedShelf={setSelectedShelf}\r\n              />\r\n            ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}