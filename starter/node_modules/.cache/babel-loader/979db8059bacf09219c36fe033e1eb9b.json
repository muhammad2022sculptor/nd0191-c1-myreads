{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahi\\\\Desktop\\\\React Learning\\\\MyRead App Project 1\\\\nd0191-c1-myreads\\\\starter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport * as BookApi from \"./BooksAPI\";\nimport SearchPage from \"./SearchPage\";\nimport HomePage from \"./HomePage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [allAvaiableBooks, setAllAvailableBooks] = useState();\n  const [currentBooks, setCurrentBooks] = useState();\n  const [toReadBooks, setToReadBooks] = useState();\n  const [readBooks, setReadBooks] = useState();\n  const [booksFetched, setBooksFetched] = useState(false); // Api call to fetch the books in the database\n\n  const getAll = async () => {\n    BookApi.getAll().then(res => {\n      const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n      delay(1000);\n      setAllAvailableBooks(res);\n      setToReadBooks(res.filter(book => book.shelf === \"wantToRead\"));\n      setCurrentBooks(res.filter(book => book.shelf === \"currentlyReading\"));\n      setReadBooks(res.filter(book => book.shelf === \"read\"));\n    });\n  };\n\n  useEffect(() => {\n    if (!booksFetched) {\n      getAll();\n    }\n\n    return () => {\n      console.log(allAvaiableBooks);\n      console.log(toReadBooks);\n      console.log(currentBooks);\n      console.log(readBooks);\n      console.log(readBooks[0].imageLinks.smallThumbnail);\n      setBooksFetched(true);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: booksFetched && /*#__PURE__*/_jsxDEV(HomePage, {\n          currentBooks: currentBooks,\n          toReadBooks: toReadBooks,\n          readBooks: readBooks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/search\",\n        element: /*#__PURE__*/_jsxDEV(SearchPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QaVUlYV89YNe4EOXLRQnhp/lxQI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/shahi/Desktop/React Learning/MyRead App Project 1/nd0191-c1-myreads/starter/src/App.js"],"names":["useEffect","useState","Routes","Route","BookApi","SearchPage","HomePage","App","allAvaiableBooks","setAllAvailableBooks","currentBooks","setCurrentBooks","toReadBooks","setToReadBooks","readBooks","setReadBooks","booksFetched","setBooksFetched","getAll","then","res","delay","ms","Promise","resolve","setTimeout","filter","book","shelf","console","log","imageLinks","smallThumbnail"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,gBAAD,EAAmBC,oBAAnB,IAA2CR,QAAQ,EAAzD;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,EAAhD;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,EAA9C;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,EAA1C;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,KAAD,CAAhD,CALa,CAOb;;AACA,QAAMiB,MAAM,GAAG,YAAY;AACzBd,IAAAA,OAAO,CAACc,MAAR,GAAiBC,IAAjB,CAAuBC,GAAD,IAAS;AAC7B,YAAMC,KAAK,GAAIC,EAAD,IAAQ,IAAIC,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAnC,CAAtB;;AACAD,MAAAA,KAAK,CAAC,IAAD,CAAL;AACAZ,MAAAA,oBAAoB,CAACW,GAAD,CAApB;AACAP,MAAAA,cAAc,CAACO,GAAG,CAACM,MAAJ,CAAYC,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAe,YAApC,CAAD,CAAd;AACAjB,MAAAA,eAAe,CAACS,GAAG,CAACM,MAAJ,CAAYC,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAe,kBAApC,CAAD,CAAf;AACAb,MAAAA,YAAY,CAACK,GAAG,CAACM,MAAJ,CAAYC,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAe,MAApC,CAAD,CAAZ;AACD,KAPD;AAQD,GATD;;AAWA5B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACgB,YAAL,EAAmB;AACjBE,MAAAA,MAAM;AACP;;AACD,WAAO,MAAM;AACXW,MAAAA,OAAO,CAACC,GAAR,CAAYtB,gBAAZ;AACAqB,MAAAA,OAAO,CAACC,GAAR,CAAYlB,WAAZ;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAYpB,YAAZ;AACAmB,MAAAA,OAAO,CAACC,GAAR,CAAYhB,SAAZ;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYhB,SAAS,CAAC,CAAD,CAAT,CAAaiB,UAAb,CAAwBC,cAApC;AACAf,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD,KAPD;AAQD,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,OAAO,EACLD,YAAY,iBACV,QAAC,QAAD;AACE,UAAA,YAAY,EAAEN,YADhB;AAEE,UAAA,WAAW,EAAEE,WAFf;AAGE,UAAA,SAAS,EAAEE;AAHb;AAAA;AAAA;AAAA;AAAA;AAJN;AAAA;AAAA;AAAA;AAAA,cADF,eAaE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,OAAO,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GApDQP,G;;KAAAA,G;AAsDT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport * as BookApi from \"./BooksAPI\";\r\nimport SearchPage from \"./SearchPage\";\r\nimport HomePage from \"./HomePage\";\r\n\r\nfunction App() {\r\n  const [allAvaiableBooks, setAllAvailableBooks] = useState();\r\n  const [currentBooks, setCurrentBooks] = useState();\r\n  const [toReadBooks, setToReadBooks] = useState();\r\n  const [readBooks, setReadBooks] = useState();\r\n  const [booksFetched, setBooksFetched] = useState(false);\r\n\r\n  // Api call to fetch the books in the database\r\n  const getAll = async () => {\r\n    BookApi.getAll().then((res) => {\r\n      const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n      delay(1000);\r\n      setAllAvailableBooks(res);\r\n      setToReadBooks(res.filter((book) => book.shelf === \"wantToRead\"));\r\n      setCurrentBooks(res.filter((book) => book.shelf === \"currentlyReading\"));\r\n      setReadBooks(res.filter((book) => book.shelf === \"read\"));\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!booksFetched) {\r\n      getAll();\r\n    }\r\n    return () => {\r\n      console.log(allAvaiableBooks);\r\n      console.log(toReadBooks);\r\n      console.log(currentBooks);\r\n      console.log(readBooks);\r\n      console.log(readBooks[0].imageLinks.smallThumbnail);\r\n      setBooksFetched(true);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Routes>\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            booksFetched && (\r\n              <HomePage\r\n                currentBooks={currentBooks}\r\n                toReadBooks={toReadBooks}\r\n                readBooks={readBooks}\r\n              />\r\n            )\r\n          }\r\n        ></Route>\r\n        <Route path=\"/search\" element={<SearchPage />}></Route>\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}