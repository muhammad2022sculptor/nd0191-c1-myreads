{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahi\\\\Desktop\\\\React Learning\\\\MyRead App Project 1\\\\nd0191-c1-myreads\\\\starter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport * as BookApi from \"./BooksAPI\";\nimport SearchPage from \"./SearchPage\";\nimport HomePage from \"./HomePage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [allAvaiableBooks, setAllAvailableBooks] = useState();\n  const [currentBooks, setCurrentBooks] = useState();\n  const [toReadBooks, setToReadBooks] = useState();\n  const [readBooks, setReadBooks] = useState();\n  const [booksFetched, setBooksFetched] = useState(false); // Api call to fetch the books in the database\n\n  const getAll = async () => {\n    await BookApi.getAll().then(res => {\n      setAllAvailableBooks(res);\n    }).then(res => {\n      setToReadBooks(res.filter(book => book.shelf === \"wantToRead\"));\n    }).then(res => {\n      setCurrentBooks(res.filter(book => book.shelf === \"currentlyReading\"));\n    }).then(res => {\n      setReadBooks(res.filter(book => book.shelf === \"read\"));\n    }).then(() => {\n      setBooksFetched(true);\n    });\n  };\n\n  useEffect(() => {\n    if (!booksFetched) {\n      getAll();\n      setTimeout(1000);\n    }\n\n    console.log(allAvaiableBooks);\n    console.log(toReadBooks);\n    console.log(currentBooks);\n    console.log(readBooks);\n    console.log(readBooks[0].imageLinks.smallThumbnail);\n  }, [booksFetched]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(HomePage, {\n          currentBooks: currentBooks,\n          toReadBooks: toReadBooks,\n          readBooks: readBooks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/search\",\n        element: /*#__PURE__*/_jsxDEV(SearchPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QaVUlYV89YNe4EOXLRQnhp/lxQI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/shahi/Desktop/React Learning/MyRead App Project 1/nd0191-c1-myreads/starter/src/App.js"],"names":["useEffect","useState","Routes","Route","BookApi","SearchPage","HomePage","App","allAvaiableBooks","setAllAvailableBooks","currentBooks","setCurrentBooks","toReadBooks","setToReadBooks","readBooks","setReadBooks","booksFetched","setBooksFetched","getAll","then","res","filter","book","shelf","setTimeout","console","log","imageLinks","smallThumbnail"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,gBAAD,EAAmBC,oBAAnB,IAA2CR,QAAQ,EAAzD;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,EAAhD;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,EAA9C;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,EAA1C;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,KAAD,CAAhD,CALa,CAOb;;AACA,QAAMiB,MAAM,GAAG,YAAY;AACzB,UAAMd,OAAO,CAACc,MAAR,GACHC,IADG,CACGC,GAAD,IAAS;AACbX,MAAAA,oBAAoB,CAACW,GAAD,CAApB;AACD,KAHG,EAIHD,IAJG,CAIGC,GAAD,IAAS;AACbP,MAAAA,cAAc,CAACO,GAAG,CAACC,MAAJ,CAAYC,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAe,YAApC,CAAD,CAAd;AACD,KANG,EAOHJ,IAPG,CAOGC,GAAD,IAAS;AACbT,MAAAA,eAAe,CACbS,GAAG,CAACC,MAAJ,CAAYC,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAe,kBAApC,CADa,CAAf;AAGD,KAXG,EAYHJ,IAZG,CAYGC,GAAD,IAAS;AACbL,MAAAA,YAAY,CAACK,GAAG,CAACC,MAAJ,CAAYC,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAe,MAApC,CAAD,CAAZ;AACD,KAdG,EAeHJ,IAfG,CAeE,MAAM;AACVF,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD,KAjBG,CAAN;AAkBD,GAnBD;;AAqBAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACgB,YAAL,EAAmB;AACjBE,MAAAA,MAAM;AACNM,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYlB,gBAAZ;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAYd,WAAZ;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYhB,YAAZ;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAZ;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAS,CAAC,CAAD,CAAT,CAAaa,UAAb,CAAwBC,cAApC;AACD,GAVQ,EAUN,CAACZ,YAAD,CAVM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,OAAO,eACL,QAAC,QAAD;AACE,UAAA,YAAY,EAAEN,YADhB;AAEE,UAAA,WAAW,EAAEE,WAFf;AAGE,UAAA,SAAS,EAAEE;AAHb;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,OAAO,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA1DQP,G;;KAAAA,G;AA4DT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport * as BookApi from \"./BooksAPI\";\r\nimport SearchPage from \"./SearchPage\";\r\nimport HomePage from \"./HomePage\";\r\n\r\nfunction App() {\r\n  const [allAvaiableBooks, setAllAvailableBooks] = useState();\r\n  const [currentBooks, setCurrentBooks] = useState();\r\n  const [toReadBooks, setToReadBooks] = useState();\r\n  const [readBooks, setReadBooks] = useState();\r\n  const [booksFetched, setBooksFetched] = useState(false);\r\n\r\n  // Api call to fetch the books in the database\r\n  const getAll = async () => {\r\n    await BookApi.getAll()\r\n      .then((res) => {\r\n        setAllAvailableBooks(res);\r\n      })\r\n      .then((res) => {\r\n        setToReadBooks(res.filter((book) => book.shelf === \"wantToRead\"));\r\n      })\r\n      .then((res) => {\r\n        setCurrentBooks(\r\n          res.filter((book) => book.shelf === \"currentlyReading\")\r\n        );\r\n      })\r\n      .then((res) => {\r\n        setReadBooks(res.filter((book) => book.shelf === \"read\"));\r\n      })\r\n      .then(() => {\r\n        setBooksFetched(true);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!booksFetched) {\r\n      getAll();\r\n      setTimeout(1000);\r\n    }\r\n    console.log(allAvaiableBooks);\r\n    console.log(toReadBooks);\r\n    console.log(currentBooks);\r\n    console.log(readBooks);\r\n    console.log(readBooks[0].imageLinks.smallThumbnail);\r\n  }, [booksFetched]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Routes>\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            <HomePage\r\n              currentBooks={currentBooks}\r\n              toReadBooks={toReadBooks}\r\n              readBooks={readBooks}\r\n            />\r\n          }\r\n        ></Route>\r\n        <Route path=\"/search\" element={<SearchPage />}></Route>\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}